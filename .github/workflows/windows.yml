name: "Windows"

# manual trigger
on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  QT_VERSION: '6.9.1'
  
jobs:
  Windows_Qt6:
    name: Win 2022 Qt 6
    runs-on: windows-2022
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ env.QT_VERSION }}
        cache: 'true'
        cache-key-prefix: install-qt-action-${{ env.QT_VERSION }}
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        modules: 'qtpositioning qtserialport qtwebchannel qtwebengine qtwebview'

    - name: Cache vcpkg installed
      uses: actions/cache@v4
      with:
        path: D:\A\INYOKAEDIT\INYOKAEDIT\VCPKG_INSTALLED
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Install NuSpell using vcpkg
      shell: cmd
      run: |
       echo set(VCPKG_BUILD_TYPE release) >> C:\vcpkg\triplets\x64-windows.cmake
       C:\vcpkg\vcpkg.exe install
       C:\vcpkg\vcpkg.exe list
       tree /f /a vcpkg_installed\x64-windows\lib
       tree /f /a vcpkg_installed\x64-windows\bin
       tree /f /a vcpkg_installed\x64-windows\include
    
    - name: Clone additional repositories
      run: |
       git clone -b packaging --single-branch https://github.com/inyokaproject/inyokaedit.git packaging
       git clone -b community --single-branch https://github.com/inyokaproject/inyokaedit.git community
    
    - name: Compile
      run: |
       mkdir build-cmake
       cmake -S ${{github.workspace}} -B ${{github.workspace}}/build-cmake -DCMAKE_PREFIX_PATH=${{github.workspace}}/vcpkg_installed/x64-windows -DPLUGIN_SPELLCHECKER_HUNSPELL=OFF -DPLUGIN_SPELLCHECKER_NUSPELL=ON
       cmake --build ${{github.workspace}}/build-cmake --config ${{env.BUILD_TYPE}}
    
    - name: Create Package
      env:
        VCINSTALLDIR: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC'
      shell: cmd
      run: |
       mkdir InyokaEdit\plugins
       mkdir InyokaEdit\community
       copy build-cmake\application\Release\InyokaEdit.exe InyokaEdit\InyokaEdit.exe
       windeployqt --release --no-translations --no-opengl-sw InyokaEdit\InyokaEdit.exe
       lconvert -o InyokaEdit\translations\qt_de.qm %QT_ROOT_DIR%\translations\qtbase_de.qm %QT_ROOT_DIR%\translations\qtwebengine_de.qm
       copy COPYING InyokaEdit\
       copy application\3rdparty\miniz\LICENSE InyokaEdit\Miniz_License.txt
       copy packaging\Windows\ICU_License.txt InyokaEdit\
       copy packaging\Windows\Nuspell_License.txt InyokaEdit\
       xcopy /y /d vcpkg_installed\x64-windows\bin\*.dll InyokaEdit\
       xcopy /i /e /s packaging\Windows\dicts InyokaEdit\dicts\
       copy build-cmake\plugins\highlighter\Release\*.dll InyokaEdit\plugins\
       copy build-cmake\plugins\hotkey\Release\*.dll InyokaEdit\plugins\
       copy build-cmake\plugins\spellchecker-nuspell\Release\*.dll InyokaEdit\plugins\
       copy build-cmake\plugins\uu_knowledgebox\Release\*.dll InyokaEdit\plugins\
       copy build-cmake\plugins\uu_tabletemplate\Release\*.dll InyokaEdit\plugins\
       chcp 65001 && xcopy /i /e /s community\* InyokaEdit\community\
       git rev-parse --short main > buildnr.txt
       set /p buildnr= < buildnr.txt
       del buildnr.txt
       set output_zip=InyokaEdit-Windows_%buildnr%.zip
       set output_exe=InyokaEdit-Windows_%buildnr%.exe
       7z a %output_zip% .\InyokaEdit\
       copy packaging\Windows\inyokaedit.nsi inyokaedit.nsi
       copy packaging\Windows\removeprevious.nsh removeprevious.nsh
       copy packaging\Windows\inyokaedit.ico inyokaedit.ico
       makensis inyokaedit.nsi
       ren InyokaEdit_Installer.exe %output_exe%
       
    - uses: actions/upload-artifact@v4
      with:
        name: InyokaEdit-Windows_Artefacts
        path: InyokaEdit-Windows_*.*
        retention-days: 3
        overwrite: true
